---
// src/pages/portfolio/[slug].astro
import { getCollection } from 'astro:content';
// *** This MUST use the new BaseLayout ***
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const portfolioEntries = await getCollection('portfolio');
  return portfolioEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { project: entry },
  }));
}

const { project } = Astro.props;

if (!project) {
  return Astro.redirect("/404");
}

const { Content } = await project.render();
const {
  title,
  description,
  publishDate,
  coverImage,
  tags,
  client,
  role,
  liveLink,
  repoLink,
  videoLink,
  slides
} = project.data;

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric', month: 'long', day: 'numeric'
}).format(new Date(publishDate));
const isoDate = new Date(publishDate).toISOString();
---
<BaseLayout title={title} description={description}>
  
  <article class="project-detail">
    
    <header class="project-header">
      <h1>{title}</h1>
      <p class="publish-date"><time datetime={isoDate}>{formattedDate}</time></p>
      {tags && tags.length > 0 && (
        <div class="tags">
          {tags.map(tag => <span class="tag-detail">{tag}</span>)}
        </div>
      )}
    </header>

    {coverImage && coverImage.url && (
      <div class="project-cover-image">
        <img src={coverImage.url} alt={coverImage.alt || `Cover image for ${title}`} />
      </div>
    )}

    <div class="project-meta-links">
      {client && <p><strong>Client:</strong> {client}</p>}
      {role && <p><strong>My Role:</strong> {role}</p>}
      {(liveLink || repoLink || videoLink) && (
        <div class="external-links">
          {liveLink && <a href={liveLink} target="_blank" rel="noopener noreferrer" class="button">View Live Site</a>}
          {repoLink && <a href={repoLink} target="_blank" rel="noopener noreferrer" class="button secondary">View Repository</a>}
          {videoLink && <a href={videoLink} target="_blank" rel="noopener noreferrer" class="button secondary">Watch Demo Video</a>}
        </div>
      )}
    </div>

    <div class="project-content">
      <Content />
    </div>
    
    {slides && slides.length > 0 && (
      <section class="project-slides-section">
        <h2>Presentation Slides</h2>
        <div class="slides-gallery">
          {slides.map((slide, index) => (
            <figure class="slide-item">
              <img src={slide.url} alt={slide.alt || `${title} - Slide ${index + 1}`} loading="lazy" />
              {slide.caption && <figcaption>{slide.caption}</figcaption>}
            </figure>
          ))}
        </div>
      </section>
    )}
  </article>
  
  <style>
    /* Example: */
    .project-detail {
      max-width: 800px;
      margin: 0 auto 2rem auto;
    }
    .project-header {
      text-align: center;
      margin-bottom: 2.5rem;
      border-bottom: 1px solid var(--border-color);
    }
    /* ... PASTE ALL YOUR OTHER STYLES HERE ... */
  </style>
</BaseLayout>
